<?xml version="1.0" encoding="UTF-8"?>
<documentation>
<page title="HowToInstall" desc="How to Install the Variation toolkit">

<h2>Dependencies</h2>
<ul>
<li><b>Samtools</b>: Utilities for post-processing alignments in the SAM format. <pmid>19505943</pmid></li>
<li><b>Tabix</b>: fast retrieval of sequence features from generic TAB-delimited files. <pmid>21208982</pmid></li>
<li><b>mysql-dev</b>: the files and libraries for mysql.</li>
<li><b>libxml2</b>: the C library for xml <url>http://xmlsoft.org/</url>.</li>
<li><b>libxslt</b>: the C library for xslt <url>http://xmlsoft.org/XSLT/</url>.</li>
<li><b>libcurl</b>: the C library for downloading URLs.</li>
<li><b>jkentsrc</b>: (optional) Jim Kent's C library / Ucsc parsing bigbed, bigwig...</li>
<li><b>sqlite3</b>: (optional) SQL database engine.</li>
</ul>

<h2>Building</h2>
Download the latest version of varkit using <code>subversion</code>:

<pre>svn checkout http://variationtoolkit.googlecode.com/svn/trunk/ variationtoolkit-read-only</pre>

or update your current version by calling <code>svn update</code> in the  variationtoolkit folder.
<pre>svn update</pre>
<h2>Edit the Config file.</h2>
Edit the file variationtoolkit/config.mk . You'll have to set the path to the sources of tabix (>=0.2.5), samtools (>=-0.1.18), etc..
<pre>##path to SAMTOOLS
SAMDIR=${HOME}/samtools-0.1.18
##path to TABIX
TABIXDIR=/home/lindenb/tabix-0.2.5
##optional path to UCSC kent's src
KENTDIR=${HOME}/src/kent/kent
##optional path to google leveldb
LEVELDBDIR=${HOME}/tmp/leveldb-read-only
SQLITE_LIB=-lsqlite3
SQLITE_CFLAGS=</pre>

then type:
<pre>
make</pre>
the binaries will be generated in the <b>bin/</b> folder.
<h2>Compiling one program without dependencies</h2>
If you don't want to install all the programs and just beed one program you can go in the `src` folder and ask for compiling the software. e.g:
<pre>cd src
make ../bin/fastatail
$ make ../bin/fasta2tsv
g++ -o ../bin/fasta2tsv fasta2tsv.cpp -O3 -Wall -lz</pre>
</page>


<page title="NgsProject" desc="CGI interface to Samtools tview. Visualize short reads alignments">

This C++ program named ngsproject.cgi uses the samtools api, it allows any user to visualize all the alignments in a given NGS project. The projects and their BAMS are defined on the server side using a simple XML document.

<h1>How to install on apache/httpd</h1>
add the path to the cgi directory in the configuration file variationtoolkit/config.mk

<pre>(...)
CGI_BIN_DIR=/var/www/cgi-bin</pre>
Create the cgi-bin folder is needed
<pre>sudo mkdir -p /var/www/cgi-bin
sudo chmod 755 /var/www/cgi-bin</pre>
Create a XML file describing your project<pre>cat /var/www/cgi-bin/ngsproject.xml  


<![CDATA[<?xml version="1.0"?>
<!DOCTYPE projects [
<!ENTITY samdir "/tmp">
]>
<projects>
  <reference id="ref1">
    <name>Samtools1</name>
    <description>Samtools example 1</description>
    <path>&samdir;/examples/ex1.fa</path>
  </reference>
  <bam id="b1">
    <sample>Huey</sample>
    <path>&samdir;/examples/ex1.bam</path>
  </bam>
  <bam id="b2">
    <sample>Dewey</sample>
    <path>&samdir;/examples/ex1.bam</path>
  </bam>
  <bam id="b3">
    <sample>Louie</sample>
    <path>&samdir;/examples/ex1.bam</path>
  </bam>
  <project id="p1">
    <name>Project P1</name>
    <description>This is my 1st project</description>
    <bam ref="b1"/>
    <bam ref="b2"/>
    <bam ref="b3"/>
    <reference ref="ref1"/>
  </project>
  <project id="p2">
    <name>Project P2</name>
    <description>This is my 2nd project</description>
    <bam ref="b1"/>
    <bam ref="b3"/>
    <reference ref="ref1"/>
  </project>
</projects>]]></pre>
Edit the apache2 config <code>/etc/apache2/apache2.conf</code>:
<pre>sudo nano /etc/apache2/apache2.conf</pre>
and add the following lines, specify <b>NGS_PROJECT_PATH</b>, the path to the XML file
<pre><![CDATA[<VirtualHost *:80>
ServerName localhost
DocumentRoot /var/www/
AddHandler cgi-script .cgi .pl 
SetEnv NGS_PROJECT_PATH /var/www/cgi-bin/ngsproject.xml    
<Directory /cgi-bin/>
        AllowOverride None
        Options ExecCGI -MultiViews +SymLinksIfOwnerMatch
        Order allow,deny
        Allow from all    
</Directory>

</VirtualHost>]]></pre>
and restart apache:
<pre>sudo /etc/init.d/apache2 restart</pre>
<h2>Screenshot</h2>
<img src="http://variationtoolkit.googlecode.com/svn/trunk/doc/ngsproject.jpg"/>

</page>


<page title="Vcf2Sqlite" desc="Inserts a VCF in a sqlite3 database">

Inserts a VCF in a sqlite3 database.
<h2>Dependencies</h2>
<url>http://www.sqlite.org/</url> : libraries and header.<br/>Define "<code>SQLITE_LIB</code>" and 
"<code>SQLITE_CFLAGS</code>" in <code>config.mk</code> (see <url>HowToInstall</url> )
<h2>Options</h2>
<ul>
<li>-f (file) sqlite database (<b>REQUIRED</b>).</li>
</ul>
<h2>Schema</h2>
A schema is available as SVG in [http://variationtoolkit.googlecode.com/svn/trunk/doc/schema01.svg]
<h2>Example:</h2>
<pre><![CDATA[$ vcf2sqlite -f db.sqlite file.vcf
$ sqlite3 -line db.sqlite  "select * from VCFCALL LIMIT 4"

       id = 1
   nIndex = 0
vcfrow_id = 1
sample_id = 1
     prop = GT
    value = 1/1

       id = 2
   nIndex = 1
vcfrow_id = 1
sample_id = 1
     prop = PL
    value = 46,6,0

       id = 3
   nIndex = 2
vcfrow_id = 1
sample_id = 1
     prop = GQ
    value = 10

       id = 4
   nIndex = 0
vcfrow_id = 2
sample_id = 1
     prop = GT
    value = 1/1

]]></pre>
</page>


<page title="Vcf2xml" desc="Transforms a VCF to xml">

<h2>Dependencies</h2>
<code>libxml</code> (see <url>HowToInstall</url> )
<h2>Example:</h2>
<pre><![CDATA[$ vcf2xml input.vcf | xmllint --format -

<?xml version="1.0" encoding="UTF-8"?>
<vcf>
  <head>
    <meta key="fileformat">VCFv4.1</meta>
    <meta key="samtoolsVersion">0.1.17 (r973:277)</meta>
    <infos>
      <info>
        <id>DP</id>
        <number>1</number>
        <type>Integer</type>
        <description>Raw read depth</description>
      </info>
      <info>
        <id>DP4</id>
        <number>4</number>
        <type>Integer</type>
        <description># high-quality ref-forward bases</description>
      </info>
      <info>
        <id>MQ</id>
(...)
      </calls>
    </variation>
    <variation>
      <chrom>chr1</chrom>
      <pos>112697</pos>
      <ref>T</ref>
      <alt>G</alt>
      <qual>10.4</qual>
      <infos>
        <info key="DP">1</info>
        <info key="AF1">1</info>
        <info key="AC1">2</info>
        <info key="DP4">0,0,0,1</info>
        <info key="MQ">60</info>
        <info key="FQ">-30</info>
      </infos>
      <calls>
        <call sample="input.bam">
          <prop key="GT">1/1</prop>
          <prop key="PL">40,3,0</prop>
          <prop key="GQ">5</prop>
        </call>
      </calls>
    </variation>
  </body>
</vcf>]]></pre>
</page>

<page title="FastaSlice" desc="Slice a FASTA input">


<ul>
<li><b>-e</b> (every)  default:1</li>
<li><b>-L</b> (fragment size)  default: (same as -e)</li>
</ul>
<h2>Example:</h2>

<pre>$ fastaslice -e 10 -L 20 &lt; nsp3.fasta | head

&gt;gi|256041817|gb|ACU64749.1| NSP3 protein [Rotavirus A AU32xUK reassortant (UKg9AU32)]|slice:0-20
MLKMESTQQMASSIINTSFE
&gt;gi|256041817|gb|ACU64749.1| NSP3 protein [Rotavirus A AU32xUK reassortant (UKg9AU32)]|slice:10-30
ASSIINTSFEAAVVAATSTL
&gt;gi|256041817|gb|ACU64749.1| NSP3 protein [Rotavirus A AU32xUK reassortant (UKg9AU32)]|slice:20-40
AAVVAATSTLELMGIQYDYN
&gt;gi|256041817|gb|ACU64749.1| NSP3 protein [Rotavirus A AU32xUK reassortant (UKg9AU32)]|slice:30-50
ELMGIQYDYNEIYTRVKSKF
&gt;gi|256041817|gb|ACU64749.1| NSP3 protein [Rotavirus A AU32xUK reassortant (UKg9AU32)]|slice:40-60
EIYTRVKSKFDYVMDDSGVK</pre>

</page>


</documentation>
